android {
    buildTypes {
        debug {
            matchingFallbacks = ['release', 'debug']
            zipAlignEnabled false
            minifyEnabled false
            debuggable true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        release {
            matchingFallbacks = ['release', 'debug']
            zipAlignEnabled true
            minifyEnabled false
            debuggable false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //Ref : https://blog.moetz.dev/android/publish-libraries-including-a-proguard-configuration/
            consumerProguardFiles 'consumer-rules.pro'
        }

        prod_debug.initWith(buildTypes.debug)
        sit_debug.initWith(buildTypes.debug)
        dev_debug.initWith(buildTypes.debug)

        prod_release.initWith(buildTypes.release)
        sit_release.initWith(buildTypes.release)
        dev_release.initWith(buildTypes.release)

        prod_debug {}
        prod_release {}

        sit_debug {}
        sit_release {}

        dev_debug {
            getIsDefault().set(true)
        }
        dev_release {}
    }

    variantFilter { variant ->
        def buildTypename = variant.buildType.name.toString()
        if (buildTypename.equals('release') || buildTypename.equals('debug')) {
            variant.setIgnore(true)
        }
    }
}
